{"version":3,"sources":["webpack:///./src/pages/quiz.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Quiz","state","quizData","questionNumber","quizAnswers","done","getPrevQuestion","_this","setState","getNextQuestion","length","finishQuiz","navigate","doneQuizData","userAnswers","handleTextArea","event","answer","target","value","answerArr","Object","assign","id","componentDidMount","_this2","this","console","log","undefined","props","location","interviewData","questions","render","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","Fragment","question","onChange","cols","rows","onClick","React","Component","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","createContext","ProdPageRenderer","_ref","pageResources","InternalPageRenderer","json"],"mappings":"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","file":"component---src-pages-quiz-js-88e811516c03a1e8b78e.js","sourcesContent":["import React from \"react\"\r\nimport {Link, navigate} from \"gatsby\"\r\n\r\n// import jsInterviewData from \"../components/interviewData/jsInterviewData\"\r\n\r\nclass Quiz extends React.Component {\r\n\r\n    state = {\r\n        quizData: {},\r\n        questionNumber: 0,\r\n        quizAnswers: {},\r\n        done: false\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"aici\")\r\n        console.log(this.state)\r\n\r\n        if (this.props.location.state.interviewData !== undefined) {\r\n            console.log(\"aici 2\")\r\n            this.setState(() => ({\r\n                    quizData: this.props.location.state.interviewData.questions,\r\n                }\r\n            ), () => {\r\n                console.log(\"gata\", this.state)\r\n            });\r\n        }\r\n    }\r\n\r\n    getPrevQuestion = () => {\r\n        if (this.state.quizData[this.state.questionNumber - 1]) {\r\n            this.setState({\r\n                questionNumber: this.state.questionNumber - 1\r\n            })\r\n        }\r\n    }\r\n\r\n    getNextQuestion = () => {\r\n        if (this.state.quizData[this.state.questionNumber + 1]) {\r\n            this.setState({\r\n                questionNumber: this.state.questionNumber + 1\r\n            }, () => {\r\n                if (this.state.questionNumber + 1 === this.state.quizData.length) {\r\n                    this.setState({\r\n                        done: true\r\n                    })\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    finishQuiz = () => {\r\n        navigate(\"/interviewQuiz/\", {\r\n            state: {\r\n                done: true,\r\n                doneQuizData: this.state.quizData,\r\n                userAnswers: this.state.quizAnswers\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    handleTextArea = (event) => {\r\n        let answer = event.target.value\r\n        let answerArr = {...this.state.quizAnswers}\r\n        answerArr[this.state.quizData[this.state.questionNumber].id] = answer\r\n        this.setState({\r\n            quizAnswers: answerArr\r\n        });\r\n    }\r\n\r\n    render() {\r\n        console.log(\"render\", this.state)\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <Link to=\"/\">Home</Link>\r\n                {\r\n                    this.state.quizData.length > 0 &&\r\n                    <>\r\n                        <div>{this.state.quizData[this.state.questionNumber].id}</div>\r\n                        <div>{this.state.quizData[this.state.questionNumber].question}</div>\r\n                        <textarea onChange={this.handleTextArea}\r\n                                  value={this.state.quizAnswers[this.state.questionNumber + 1] ? this.state.quizAnswers[this.state.questionNumber + 1] : \"\"}\r\n                                  cols={40} rows={10}/>\r\n                        <button onClick={this.getPrevQuestion}>Prev Question</button>\r\n                        <button onClick={this.getNextQuestion}>Next Question</button>\r\n                        {\r\n                            this.state.done === true &&\r\n                            <div>\r\n                                <button onClick={this.finishQuiz}>Finish Quiz!</button>\r\n                            </div>\r\n                        }\r\n                    </>\r\n                }\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz;\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}