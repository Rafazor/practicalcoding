{"version":3,"sources":["webpack:///./src/components/AceEditor.js","webpack:///./src/components/code/JsEval.js"],"names":["AceEditorJs","getEditorValue","props","quizExamples","questionNumber","currentQuiz","algorithm","algorithmProblem","render","_this2","this","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","Fragment","react_ace__WEBPACK_IMPORTED_MODULE_1___default","placeholder","mode","theme","name","style","width","minHeight","height","onChange","code","handleExamplesTextArea","fontSize","showPrintMargin","showGutter","highlightActiveLine","editorProps","$blockScrolling","value","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","showLineNumbers","tabSize","_code_JsEval__WEBPACK_IMPORTED_MODULE_7__","codeToEval","algorithmAnswer","React","Component","JsEval","evalCode","eval","e","SyntaxError"],"mappings":"0LAWMA,8JACFC,eAAiB,SAACC,GACd,OAAKA,EAAMC,aAAaD,EAAME,eAAiB,KAAsC,IAAhCF,EAAMG,YAAYC,UAG5DJ,EAAMC,aAAaD,EAAME,eAAiB,GAAKF,EAAMC,aAAaD,EAAME,eAAiB,GAAK,GAF9FF,EAAMG,YAAYE,8HAMjCC,OAAA,WAAS,IAAAC,EAAAC,KAEL,OACIC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACII,YAAY,mBACZC,KAAK,aACLC,MAAM,UACNC,KAAK,QACLC,MAAO,CAACC,MAAO,OAAQC,UAAW,QAASC,OAAQ,QACnDC,SAAU,SAAAC,GAAI,OAAIhB,EAAKP,MAAMwB,uBAAuBD,IACpDE,SAAU,GACVC,iBAAiB,EACjBC,YAAY,EACZC,qBAAqB,EACrBC,YAAa,CAACC,iBAAiB,GAC/BC,MAAOvB,KAAKT,eAAeS,KAAKR,OAChCgC,WAAY,CACRC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gBAAgB,EAChBC,iBAAiB,EACjBC,QAAS,MAGrB5B,EAAAC,EAAAC,cAAA,YAE6C,IAArCH,KAAKR,MAAMG,YAAYC,WACvBK,EAAAC,EAAAC,cAAC2B,EAAA,EAAD,CAAQC,WAAY/B,KAAKT,eAAeS,KAAKR,OACrCwC,gBAAiBhC,KAAKR,MAAMG,YAAYqC,wBAvC9CC,IAAMC,WAgDjB5C,0WCxDT6C,2PAEFC,SAAW,SAACrB,MACR,IACI,OAAOsB,KAAKtB,MACd,MAAOuB,GACL,GAAIA,aAAaC,YACb,MAAO,kGAKnBzC,OAAA,WACI,OACIG,2CAAAC,EAAAC,cAAAF,2CAAAC,EAAAE,SAAA,KACIH,2CAAAC,EAAAC,cAAA,WAAMH,KAAKoC,SAASpC,KAAKR,MAAMuC,aAC/B9B,2CAAAC,EAAAC,cAAA,WAAM,oBAAsBH,KAAKR,MAAMwC,iBAEvC/B,2CAAAC,EAAAC,cAAA,WAAMH,KAAKoC,SAASpC,KAAKR,MAAMuC,aAAe/B,KAAKR,MAAMwC,gBAAkB,OAAS,iBAlB/EC,6CAAMC,WAyBZC","file":"10-47ce8db6b324a27b8d4e.js","sourcesContent":["import React from \"react\"\r\nimport AceEditor from 'react-ace';\r\n\r\nimport 'brace/mode/javascript';\r\nimport 'brace/mode/html';\r\nimport 'brace/mode/css';\r\nimport 'brace/theme/monokai';\r\nimport 'brace/ext/language_tools';\r\n\r\nimport JsEval from \"./code/JsEval\";\r\n\r\nclass AceEditorJs extends React.Component {\r\n    getEditorValue = (props) => {\r\n        if (!props.quizExamples[props.questionNumber + 1] && props.currentQuiz.algorithm === true) {\r\n            return props.currentQuiz.algorithmProblem\r\n        } else {\r\n            return props.quizExamples[props.questionNumber + 1] ? props.quizExamples[props.questionNumber + 1] : \"\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <div>\r\n                    <AceEditor\r\n                        placeholder=\"Add example here\"\r\n                        mode=\"javascript\"\r\n                        theme=\"monokai\"\r\n                        name=\"blah2\"\r\n                        style={{width: \"100%\", minHeight: \"200px\", height: \"auto\"}}\r\n                        onChange={code => this.props.handleExamplesTextArea(code)}\r\n                        fontSize={14}\r\n                        showPrintMargin={true}\r\n                        showGutter={true}\r\n                        highlightActiveLine={true}\r\n                        editorProps={{$blockScrolling: true}}\r\n                        value={this.getEditorValue(this.props)}\r\n                        setOptions={{\r\n                            enableBasicAutocompletion: true,\r\n                            enableLiveAutocompletion: true,\r\n                            enableSnippets: true,\r\n                            showLineNumbers: true,\r\n                            tabSize: 2,\r\n                        }}/>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        this.props.currentQuiz.algorithm === true &&\r\n                        <JsEval codeToEval={this.getEditorValue(this.props)}\r\n                                algorithmAnswer={this.props.currentQuiz.algorithmAnswer}/>\r\n                    }\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default AceEditorJs\r\n","import React from \"react\"\r\n\r\n\r\nclass JsEval extends React.Component {\r\n\r\n    evalCode = (code) => {\r\n        try {\r\n            return eval(code);\r\n        } catch (e) {\r\n            if (e instanceof SyntaxError) {\r\n                return \"Error\"\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div>{this.evalCode(this.props.codeToEval)}</div>\r\n                <div>{\"expected answer: \" + this.props.algorithmAnswer}</div>\r\n\r\n                <div>{this.evalCode(this.props.codeToEval) == this.props.algorithmAnswer ? \"GOOD\" : \"PLM\"}</div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default JsEval\r\n"],"sourceRoot":""}